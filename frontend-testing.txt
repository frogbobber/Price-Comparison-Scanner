I was given the task of creating the front-end user interface for the mobile application. Having no experience with Android Studio, testing of implementations were done using a bottom-to-top approach.  We learned that we could attach GitHub to our Android Studio IDE to allow for easy management and sharing capabilities between all members of our team.  Once the repository was attached I was set out to perform implementing our first design for our application. I generated code incrementally and as small as possible to get a workable platform. For example when designing the home page of our application the overall design of the layout must have been created first in order to insert any special actions (listeners and events) to occur. A simplistic and very basic approach was creating a blank layout with a singular button. Our app required us to redirect the user to the camera functionality in their phone as soon as they tapped or “clicked” the button. So, in order for the button to redirect any actions incurring on its interface, a “on click” method must be implemented and provoked for that event to occur. Once, I had managed to understand the functionalities of that, additional features could be added to the overall system. Layouts such as Drawers and Navigation Menu were added to allow users of our app to relevant pages we wanted to implement. These included: data analytics, results, redirecting back home, to the scanning page, the tutorial, and the about page.  Further features were though of but because of time constraints could not be added. Such features included: a history page, scan to URL option, a QR generator, social media/GitHub repository redirect, and others. When adding any features, steps were taken very carefully and compactly. By adding a feature at a time and running the virtual smartphone through the Android Studio IDE, testing was a fairly easy going process. If an error occurred or failures were observed, the IDE would output debugging descriptions that would allow us to understand where issues had occurred. Sometimes when we were daring, we would add many features at a time, but this would incur significant problems and cause the application to crash. Such occurrences would sometimes need a rollback to its original state before the additions and had to be reassessed. Having GitHub attached to our project provided tremendous support and allowed us to make mistakes and fix them more easily. 
